一. 昨日回顾:

    列表  list []
    增 :
        append   追加
        insert   插入
        extend   迭代添加   数字和bool 是不可以添加的  因为这些不是可迭代对象
    删:
        pop        默认删除最后一个   通过索引来删除   返回值  --- 被删除的元素
        remove     通过元素进行删除
        del li[3]  通过下标删除
        clear      清空列表      []
    改:
        li[3] = 'admin'
        li[1:4] = 'a'
    查:
        for 循环  索引  切片
    列表的嵌套:
        li= [1,2,3,4,[5,6,7,8]]
        找到7
        li[4][2]
    列表的操作:
        sort   默认升序   降序  reverse = True
        count  计数
        reverse  将列表整个翻转
        len()

    元组: tuple
    元组是一个只读列表 不可改变

    range   --   范围
    print(range(1,10))    range(1,10)   [1,2,3,4,5,6,7,8,9]
    py2:
        range 和 xrange
    py3:
        range

二. 作业讲解:
三. 今日内容:

    1. 字典
        dict  用{}来表示    键值对数据  {key:value}  唯一性
        键  都必须是可哈希的   不可变的数据类型就可以当做字典中的键
        值  没有任何限制
    2. 增删改查
        dic[key] = value
        dic.setdefault(key,value)   如果键在字典中存在不进行任何操作,否则就添加
                                    可以通过key查询,没有这个key返回None
        ====================================================================
        pop(key)                    有返回值  返回的是被删除value
        del dic[key]
        popitem()                   随机删除
        clear()                     清空字典
        ======================================================================
        dic[key] = value
        dic.update(字典)
        =======================================================================
        get(key)
        dic[key]
        for 循环
        setdefault(key)
        =======================================================================
    3. 字典的其他操作:
        keys     获取到所有的键存在一个高仿的列表中
        values   获取到所有的值存在一个高仿的列表中
        items    获取到所有的键值对以元组的形式存在一个高仿的列表中
        解构:
            a,b  = 1, 2
            a,b  = (1,2)
            a,b  = [1,2]
    4. 字典的嵌套:
            dic = {
                'name':'汪峰',
                'age':43,
                'wife':{
                    'name':'国际章',
                    'age':39,
                    'salary':100000
                },
                'baby':[
                    {'name':'熊大','age':18},
                    {'name':'熊二','age':15},
                ]

            }

            dic['baby'][0]['age'] = 19
            print(dic)