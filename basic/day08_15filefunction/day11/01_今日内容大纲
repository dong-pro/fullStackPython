一. 昨日内容回顾
    函数: 对功能或者动作的封装
    语法:
        def 函数名(形参列表):
            函数体(代码块, return)
        函数名(实参列表)
    形参: 在函数声明的位置是形参(变量)
    实参: 在函数调用的时候给函数的形参传递的信息(值)
    传参: 把实参的值交给形参的过程

    返回值:
        return 可以终止一个函数的运行
        1. 什么都不写. 不写return. 返回None
        2. 写了return, 返回None
        3. return 值. 有一个返回值.
        4. return 值1, 值2, 值3...多个返回值. 接收的是元组(不可变)
    参数:
        形参:
            1. 位置参数
            2. 默认值参数
            3. 动态传参
        实参:
            1. 位置参数, 记住位置
            2. 关键字参数,  记住名字
            3. 混合参数, 顺序: 先位置后关键字
二. 作业讲解
三. 今日主要内容
    1. 函数的动态参数
        1. *args 位置参数动态传参
        2. **kwargs 关键字参数动态传参
        顺序:位置参数, *args, 默认值, **kwargs

        def func(*args, **kwargs):
            pass

        形参的位置*,**: 聚合
        实参的位置*,**: 打散
    2. 命名空间
        1. 内置名称空间
        2. 全局名称空间
        3. 局部名称空间

        作用域:
            1. 全局作用域: 内置+全局
            2. 局部作用域: 局部(函数被调用)
        globals() 查看全局中的内容
        locals() 查看当前作用域中的内容
    3. 函数嵌套
        函数可以互相的嵌套
    4. global和nonlocal关键
        global: 在局部访问全局中的内容
        nonlocal: 在局部寻找外层函数中离他最近的那个变量
    明日预习:
        1.闭包.
        2.迭代器